h1 = @title
h3.subtitle Part 4 of Creating a Developer Blog series
h5 Posted Dec 31, 2014
br/
.col-lg-8.col-lg-offset-2.dynamic-center
  h3 Overview
  h4 Assumptions
  p You have done all the previous part(s) of this series or you have a working knowledge with Sinatra. You have a Mac or can translate the Terminal commands to Command Prompt. You have Sublime Text installed or can translate accordingly. You've set up your environment for Git, GitHub, and Heroku. You have minor experience with Ruby or a decent amount of experience with another OOP language. You know what the terms mean in the title.
  h4 Quick Summary
  p
    | Blogs take a lot of time to write. They shouldn't take a long time to setup. Combining Sinatra, Bootstrap and Heroku makes setup easy. Add Prism.js on top of that and you can get a technical blog up in a matter of minutes. This is the fourth article in a multi-part series. For more, check the
    a href="/blog"  blog
    | .
  h4 Tech Used
  a href="http://www.sinatrarb.com/"  Sinatra
  |  v1.4.5
  br/
  a href="https://www.heroku.com/"  Heroku
  br/
  a href="http://slim-lang.com/"  Slim
  |  v3.0.0
  br/
  a href="http://getbootstrap.com/" Bootstrap
  |  v3.3.1
  br/
  a href="http://www.bootswatch.com/"  Bootswatch
  |  (free Bootstrap themes) v3.3.1
  br/
  a href="https://code.jquery.com/jquery-2.1.3.min.js" jQuery
  |  v2.1.3
  br/
  a href="http://prismjs.com/" Prism.js
  br/
  br/
  h3 Adding Prism.js
  p
    | Prism.js is an awesome syntax highlighting library that only requires one CSS and one JavaScript file. As discussed in 
    a href="/sinatra-bootstrap-css-js" part 3 of this series
    | , it's easy to set up and include CSS and JavaScript files in Sinatra. 
  p
    | To get it added, we first need to head over to 
    a href="http://prismjs.com/download.html" target="_blank"
      | Prism.js's Download page
    | , choose which languages you want to be included, then download the required JavaScript file into 
    code
      | blog/public/js/prism.js
    | and the required CSS file into 
    code
      | blog/public/css/prism.css
    | . Next, we need to require it in 
    code
      | blog/views/layout.slim
    | .
  pre
    code.language-bash # blog/views/layout.slim
      html
        head
          link href="/css/bootstrap.css" rel="stylesheet"
          link href="/css/prism.css" rel="stylesheet"
          link href="/css/custom.css" rel="stylesheet"
          script src="/js/jquery.min.js"
          script src="/js/bootstrap.min.js"
          script src="/js/prism.js"
          title My Soon-To-Be Famous Blog
          # ...
  p The last step is to use it correctly.
  h3 Prism.js with Slim
  p
    | Using Prism.js with Slim is a little weird looking at first, but is clear to read once you get used to it. Here's an example with relevant code.
  pre
    code.language-ruby # Example -- Syntax Highlighting
      class Dog
        def initialize(args)
          @name = args[:name]
          @age  = args[:age]
        end
      end
  pre
    code.language-bash # Example -- Source Code
      pre
        code.language-ruby # Example -- Syntax Highlighting
          class Dog
            def initialize(args)
              @name = args[:name]
              @age  = args[:age]
            end
          end
  p
    | As you can see, the tabbing is recognized and important. The first line of the code you're writing starts on the same line as 
    code
      | code.language-*
    | . There are a lot of cool features/customizations that Prism.js offers. Mess around with 
    a href="http://prismjs.com/plugins/" their plugins
    |  to see what you'd like on your blog.
  h3 Final Word
  p
    | This project can be found on
    a href="https://github.com/rgpass/sinatra_blog_tutorial/tree/fde2630f6c96f016e8cd9ee4030766304f076b7d"  GitHub
    | . The example page can be accessed via  
    code
      | /first-post
    | . Check the
    a href="/blog"  blog
    |  for more in this multi-part series.